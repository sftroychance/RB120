Twenty-one is a game in which a player and a dealer are dealt 2-card hands from a shuffled
deck, with each player given the option to add additional cards or stop adding
cards. The winner has the hand that is closest to a point value of 21 without
going over that value.

nouns: 
game
player
dealer
card
hand
point value

verbs:
deal
shuffle
add (hit)
stop adding (stay)

class Player
  def hit?
  end

  to_s
    # shows hand
  end
end

class Dealer < Player
  def hit?
  end
end

class Hand
  def score
  end

  def busted?
  end
end

class TwentyOneGame
  def play
    welcome_message
    deal_hands
    loop do
      display_hands
      player_turns
      display_result
      break unless play_again?
    end
    display_game_result
    goodbye_message
  end

  def deal_hands
  end

  def player_turns
  end 

  def deal_card
  end


end

class Deck
  def initialize
  # add_deck twice (start with two decks in array)
  end
  
  def add_deck
  end

  def shuffle
  end

  def deal
  #at end, add_deck if deck.size < 52
  end
end

class Card
end

class Display
  def welcome_message
  end

  def goodbye_message
  end

  def display_hands
  end

  def display_hand_result
  end

  def display_game_result
  end
end

TwentyOneGame
- game engine
- collab: Player, Dealer, Deck, Display

Display
- displays hands, game results, and messages
- collab: 

Player
- maintains hand states, hits or stays, determines score or bust
- collab: Hand

Dealer
- maintains hand state, hits or stays, determines score or bust
- collab: Hand

Deck
- maintains deck state, deals, shuffles
- collab: Card

Card (possibly Struct)
- Holds card state

Hand
- maintains state of hand
- collab: Card

game:
   - display initialized
   - player initialized
   - dealer initialized
   - deck initialized
     - cards initialized
     - cards shuffled
   - welcome_message
   - deal_hands
   - loop
     - show_dealer_hand? = false
     - cycle players
       - show_dealer_hand? = true if dealer
       - display hands
       - deal card if hit?
       - update display
       - break if bust? 
       - display game result
       - break unless play again
   - display game result

notes on hand display:
- previous version, the screen would readjust after every card is dealt (a new
  line was added), which wasn't a great look (looks better if data entry is
  always in the same place).

  - horizontal card display? 

  - use unicode characters for suits, perhaps at card level (since they don't
    matter for scoring).
  
  - perhaps color (hearts and diamonds) (could do only red suits)

  - display as cards (would need to build array of line-by-line card formats)

+-----+  this would accommodate 11 cards across with a terminal size of 80
|6    |
|     |
|  S  |
|     |
|    6|
+-----+

Hearts: \u2665
Diamonds: \u2666
Spades: \u2660
Clubs: \u2663

red: \e[31m  \e[0m

unicode box:
UL corner: \u256D
UR corner: \u256E
LL corner: \u2570
LR corner: \u256F
horiz: \u2500
vert: \u2502

cards are a multidim array
add top and bottom lines (unshift/push)
map to add L and R borders

